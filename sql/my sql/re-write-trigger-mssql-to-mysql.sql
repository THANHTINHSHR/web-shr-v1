delimiter $$
CREATE TRIGGER TG_INSERT_ORDER_ITEMS  AFTER INSERT ON web_shr_v1.order_items FOR EACH ROW
BEGIN
DECLARE NEW_pid INT DEFAULT NEW.PRODUCT_ID;
-- DECLARE SOLD_PID INT DEFAULT -1;
-- SET SOLD_PID = (SELECT ID FROM  web_shr_v1.SOLD_PRODUCT WHERE  PRODUCT_ID = NEW.PRODUCT_ID );
 -- CASE  NEW SOLD PRODUCT
 IF NOT EXISTS (SELECT ID FROM  web_shr_v1.SOLD_PRODUCTS WHERE  PRODUCT_ID = NEW.PRODUCT_ID  )  THEN
 BEGIN
 INSERT INTO web_shr_v1.SOLD_PRODUCTS (PRODUCT_ID, SALE_NUMBER, SELL_NUMBER) VALUES ( NEW.PRODUCT_ID, 1, NEW.QUANTITY);
 END;
 -- CASE UPDATE SOLE PRODUCT 
 ELSE
 BEGIN
 DECLARE CURR_SALE_NUM INT DEFAULT 0;
 DECLARE CURR_SELL_NUM INT DEFAULT 0;
 SET CURR_SALE_NUM = (SELECT SALE_NUMBER FROM web_shr_v1.SOLD_PRODUCTS WHERE PRODUCT_ID = NEW.PRODUCT_ID);
 SET CURR_SELL_NUM = (SELECT SELL_NUMBER FROM web_shr_v1.SOLD_PRODUCTS WHERE PRODUCT_ID = NEW.PRODUCT_ID);
 UPDATE web_shr_v1.SOLD_PRODUCTS SET SALE_NUMBER = CURR_SALE_NUM + NEW.QUANTITY, SELL_NUMBER =  CURR_SELL_NUM +1 WHERE PRODUCT_ID = NEW.PRODUCT_ID;
 END;
 END IF;
 
end $$
delimiter $$
-- product trigger 
CREATE TRIGGER TG_INSERT_PRODUCT AFTER INSERT ON web_shr_v1.PRODUCTS FOR EACH ROW
BEGIN
UPDATE web_shr_v1.PRODUCTS SET RATING = 0 WHERE ID = NEW.ID;
END $$

-- review trigger
delimiter $$

CREATE TRIGGER TG_INSERT_REVIEW AFTER INSERT ON web_shr_v1.reviews FOR EACH ROW
BEGIN
DECLARE INPUT_PID INT ;
DECLARE SUM INT;
DECLARE COUNT INT ;
SET INPUT_PID =  NEW.PRODUCT_ID;
SET SUM  = (SELECT SUM(RATING) FROM  web_shr_v1.reviews WHERE PRODUCT_ID = INPUT_PID);
SET COUNT = (SELECT COUNT(RATING) FROM  web_shr_v1.reviews WHERE PRODUCT_ID = INPUT_PID);

UPDATE PRODUCTS SET RATING =  CEILING (@SUM/@COUNT) WHERE ID = @INPUT_PID;

UPDATE web_shr_v1.PRODUCTS SET RATING = CEILING (SUM/COUNT) WHERE ID = @INPUT_PID;
END $$


-- RESET AUTOINCREMENT
-- ALTER TABLE cart_items AUTO_INCREMENT = 1;
-- ALTER TABLE order_items AUTO_INCREMENT = 1;
-- ALTER TABLE sold_products AUTO_INCREMENT = 1;
-- ALTER TABLE orders AUTO_INCREMENT = 1;
-- INSERT INTO web_shr_v1.order_items ( product_id, quantity, ORDER_id) VALUES (1, 2, 34);